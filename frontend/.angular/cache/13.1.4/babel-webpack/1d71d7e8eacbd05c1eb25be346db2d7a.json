{"ast":null,"code":"import { getAllStudents } from '../store/student.selectors';\nimport { studentActionTypes } from '../store/student.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../student.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nexport class StudentsComponent {\n  constructor(studentService, store) {\n    this.studentService = studentService;\n    this.store = store;\n    this.displayedColumns = ['id', 'name'];\n    this.isUpdateActivated = false;\n  }\n\n  ngOnInit() {\n    this.students$ = this.store.select(getAllStudents);\n  }\n\n  deleteStudent(studentId) {\n    this.store.dispatch(studentActionTypes.deleteStudent({\n      studentId\n    }));\n  }\n\n  showUpdateForm(student) {\n    this.studentToBeUpdated = Object.assign({}, student);\n    this.isUpdateActivated = true;\n  }\n\n  updateStudent(updateForm) {\n    const update = {\n      id: this.studentToBeUpdated.id,\n      changes: Object.assign(Object.assign({}, this.studentToBeUpdated), updateForm.value)\n    };\n    this.store.dispatch(studentActionTypes.updateStudent({\n      update\n    }));\n    this.isUpdateActivated = false;\n    this.studentToBeUpdated = {\n      id: 0,\n      name: ''\n    };\n  }\n\n}\n\nStudentsComponent.ɵfac = function StudentsComponent_Factory(t) {\n  return new (t || StudentsComponent)(i0.ɵɵdirectiveInject(i1.StudentService), i0.ɵɵdirectiveInject(i2.Store));\n};\n\nStudentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudentsComponent,\n  selectors: [[\"app-students\"]],\n  decls: 4,\n  vars: 5,\n  template: function StudentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"pre\");\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"json\");\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, i0.ɵɵpipeBind1(3, 3, ctx.students$)));\n    }\n  },\n  pipes: [i3.JsonPipe, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/zaidysf/codes/laravel_angular/frontend/src/app/student/component/students.component.ts"],"names":["getAllStudents","studentActionTypes","i0","i1","i2","i3","StudentsComponent","constructor","studentService","store","displayedColumns","isUpdateActivated","ngOnInit","students$","select","deleteStudent","studentId","dispatch","showUpdateForm","student","studentToBeUpdated","Object","assign","updateStudent","updateForm","update","id","changes","value","name","ɵfac","StudentsComponent_Factory","t","ɵɵdirectiveInject","StudentService","Store","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","StudentsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵpipe","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","pipes","JsonPipe","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import { getAllStudents } from '../store/student.selectors';\nimport { studentActionTypes } from '../store/student.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../student.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nexport class StudentsComponent {\n    constructor(studentService, store) {\n        this.studentService = studentService;\n        this.store = store;\n        this.displayedColumns = ['id', 'name'];\n        this.isUpdateActivated = false;\n    }\n    ngOnInit() {\n        this.students$ = this.store.select(getAllStudents);\n    }\n    deleteStudent(studentId) {\n        this.store.dispatch(studentActionTypes.deleteStudent({ studentId }));\n    }\n    showUpdateForm(student) {\n        this.studentToBeUpdated = Object.assign({}, student);\n        this.isUpdateActivated = true;\n    }\n    updateStudent(updateForm) {\n        const update = {\n            id: this.studentToBeUpdated.id,\n            changes: Object.assign(Object.assign({}, this.studentToBeUpdated), updateForm.value)\n        };\n        this.store.dispatch(studentActionTypes.updateStudent({ update }));\n        this.isUpdateActivated = false;\n        this.studentToBeUpdated = { id: 0, name: '' };\n    }\n}\nStudentsComponent.ɵfac = function StudentsComponent_Factory(t) { return new (t || StudentsComponent)(i0.ɵɵdirectiveInject(i1.StudentService), i0.ɵɵdirectiveInject(i2.Store)); };\nStudentsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StudentsComponent, selectors: [[\"app-students\"]], decls: 4, vars: 5, template: function StudentsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"pre\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"json\");\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, i0.ɵɵpipeBind1(3, 3, ctx.students$)));\n    } }, pipes: [i3.JsonPipe, i3.AsyncPipe], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}